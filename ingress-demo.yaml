apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: go-app-ingress
  namespace: ingress-nginx
spec:
  rules:
  - host: demo.infracloud.space
    http:
      paths:
      - backend:
          serviceName: demo-go-app-svc
          servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: go-app-ingress-canary
  namespace: ingress-nginx
spec:
  rules:
  - host: demo-canary.infracloud.space
    http:
      paths:
      - backend:
          serviceName: demo-go-app-svc-canary
          servicePort: 80
---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: path-based-ing
  namespace: ingress-nginx
spec:
  rules:
  - host: ingresstest.infracloud.space
    http:
      paths:
      - path: /prod
        backend:
          serviceName: demo-go-app-svc
          servicePort: 80
      - path: /canary
        backend:
          serviceName: demo-go-app-svc-canary
          servicePort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: demo-go-app-svc
  namespace: ingress-nginx
spec:
  ports:
  - port: 80
    targetPort: 8000
  selector:
    app: demo-go-app
---
apiVersion: v1
kind: Service
metadata:
  name: demo-go-app-svc-canary
  namespace: ingress-nginx
spec:
  ports:
  - port: 80
    targetPort: 8000
  selector:
    app: demo-go-app-canary
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: demo-go-prod
  namespace: ingress-nginx
spec:
  replicas: 2
  template:
    metadata:
      labels:
        app: demo-go-app
    spec:
      containers:
      - name: frontend
        image: harshals/demo-go-app:master.1
        ports:
        - containerPort: 8000
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: demo-go-canary
  namespace: ingress-nginx
spec:
  replicas: 2
  template:
    metadata:
      labels:
        app: demo-go-app-canary
    spec:
      containers:
      - name: frontend
        image: harshals/demo-go-app:canary.2
        ports:
        - containerPort: 8000
